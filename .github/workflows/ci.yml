---
name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

jobs:
  tests:
    name: "Python ${{ matrix.python-version }}"
    runs-on: "ubuntu-latest"

    strategy:
      matrix:
        python-version: ["3.11", "3.12", "3.13", "3.14"]
        redis-version: [6]

    steps:
      - uses: "actions/checkout@v4"

      - uses: hynek/setup-cached-uv@757bedc3f972eb7227a1aa657651f15a8527c817  # v2.3.0

      - name: "Start Redis"
        uses: "supercharge/redis-github-action@1.2.0"
        with:
          redis-version: "${{ matrix.redis-version }}"

      - uses: extractions/setup-just@e33e0265a09d6d736e2ee1e0eb685ef1de4669ff  # v3.0.0

      - name: "Run Tox"
        run: |
          uv run --with tox-gh-actions tox

      - name: Upload coverage data
        uses: actions/upload-artifact@v4
        with:
          name: coverage-data-${{ matrix.python-version }}
          path: .coverage.*
          if-no-files-found: ignore
          include-hidden-files: true

  coverage:
    name: "Combine & check coverage."
    needs: "tests"
    runs-on: "ubuntu-latest"

    steps:
      - uses: "actions/checkout@v4"

      - uses: "actions/setup-python@v5"
        with:
          cache: "pip"
          python-version: "3.12"

      - run: "python -Im pip install --upgrade coverage[toml]"

      - name: Download coverage data
        uses: actions/download-artifact@v4
        with:
          pattern: coverage-data-*
          merge-multiple: true

      - name: "Combine coverage"
        run: |
          python -Im coverage combine
          python -Im coverage html --skip-covered --skip-empty
          python -Im coverage json

          # Report and write to summary.
          python -Im coverage report | sed 's/^/    /' >> $GITHUB_STEP_SUMMARY

          export TOTAL=$(python -c "import json;print(json.load(open('coverage.json'))['totals']['percent_covered_display'])")
          echo "total=$TOTAL" >> $GITHUB_ENV

          # Report again and fail if under the threshold.
          python -Im coverage report --fail-under=97

      - name: "Upload HTML report."
        uses: "actions/upload-artifact@v4"
        with:
          name: "html-report"
          path: "htmlcov"
        if: always()

      - name: "Make badge"
        if: github.ref == 'refs/heads/main'
        uses: "schneegans/dynamic-badges-action@v1.4.0"
        with:
          # GIST_TOKEN is a GitHub personal access token with scope "gist".
          auth: ${{ secrets.GIST_TOKEN }}
          gistID: fe982b645791164107bd8f6699ed0a38
          filename: covbadge.json
          label: Coverage
          message: ${{ env.total }}%
          minColorRange: 50
          maxColorRange: 90
          valColorRange: ${{ env.total }}

  package:
    name: "Build & verify package"
    runs-on: "ubuntu-latest"

    steps:
      - uses: "actions/checkout@v3"

      - uses: "actions/setup-python@v4"
        with:
          python-version: "3.11"

      - name: "Install tools"
        run: "python -m pip install twine check-wheel-contents build"

      - name: "Build package"
        run: "python -m build"

      - name: "List result"
        run: "ls -l dist"

      - name: "Check wheel contents"
        run: "check-wheel-contents dist/*.whl"

      - name: "Check long_description"
        run: "python -m twine check dist/*"
